diff --git a/source/creator/CMakeLists.txt b/source/creator/CMakeLists.txt
index ea90b900dfd..22282068252 100644
--- a/source/creator/CMakeLists.txt
+++ b/source/creator/CMakeLists.txt
@@ -201,9 +201,9 @@ if(WITH_BUILDINFO)
 	add_dependencies(buildinfoobj buildinfo)
 endif()
 
-add_cc_flags_custom_test(blender)
+#add_cc_flags_custom_test(OpenCVLaboratory)
 
-# message(STATUS "Configuring blender")
+# message(STATUS "Configuring OpenCVLaboratory")
 if(WITH_PYTHON_MODULE)
 	add_definitions(-DWITH_PYTHON_MODULE)
 
@@ -211,9 +211,9 @@ if(WITH_PYTHON_MODULE)
 	#
 	# note that 'SHARED' works on Linux and Windows,
 	# but not OSX which _must_ be 'MODULE'
-	add_library(blender MODULE ${SRC})
+	add_library(OpenCVLaboratory MODULE ${SRC})
 	set_target_properties(
-		blender
+		OpenCVLaboratory
 		PROPERTIES
 			PREFIX ""
 			OUTPUT_NAME bpy
@@ -223,7 +223,7 @@ if(WITH_PYTHON_MODULE)
 
 	if(APPLE)
 		set_target_properties(
-			blender
+			OpenCVLaboratory
 			PROPERTIES
 				MACOSX_BUNDLE TRUE
 				LINK_FLAGS_RELEASE "${PLATFORM_LINKFLAGS}"
@@ -234,20 +234,20 @@ if(WITH_PYTHON_MODULE)
 	if(WIN32)
 		# python modules use this
 		set_target_properties(
-			blender
+			OpenCVLaboratory
 			PROPERTIES
 			SUFFIX ".pyd"
 		)
 	endif()
 
 else()
-	add_executable(blender ${EXETYPE} ${SRC})
-	WINDOWS_SIGN_TARGET(blender)
+	add_executable(OpenCVLaboratory ${EXETYPE} ${SRC})
+	#WINDOWS_SIGN_TARGET(OpenCVLaboratory)
 endif()
 
 if(WITH_BUILDINFO)
 	# explicitly say that the executable depends on the buildinfo
-	add_dependencies(blender buildinfo)
+	add_dependencies(OpenCVLaboratory buildinfo)
 endif()
 
 
@@ -311,10 +311,10 @@ elseif(APPLE)
 	if(WITH_PYTHON_MODULE)
 		set(TARGETDIR_VER ${BLENDER_VERSION})
 	else()
-		set(TARGETDIR_VER blender.app/Contents/Resources/${BLENDER_VERSION})
+		set(TARGETDIR_VER OpenCVLaboratory.app/Contents/Resources/${BLENDER_VERSION})
 	endif()
 	# Skip relinking on cpack / install
-	set_target_properties(blender PROPERTIES BUILD_WITH_INSTALL_RPATH true)
+	set_target_properties(OpenCVLaboratory PROPERTIES BUILD_WITH_INSTALL_RPATH true)
 endif()
 
 
@@ -382,7 +382,7 @@ if(WITH_INTERNATIONAL)
 		locales
 		DEPENDS ${_all_mo_files})
 
-	add_dependencies(blender locales)
+	add_dependencies(OpenCVLaboratory locales)
 
 	# Generate INSTALL rules
 	install(
@@ -421,7 +421,7 @@ endif()
 if("${CMAKE_GENERATOR}" MATCHES ".*Makefiles.*")
 	# message after building.
 	add_custom_command(
-		TARGET blender POST_BUILD MAIN_DEPENDENCY blender
+		TARGET OpenCVLaboratory POST_BUILD MAIN_DEPENDENCY blender
 		COMMAND ${CMAKE_COMMAND} -E
 		        echo 'now run: \"make install\" to copy runtime files and scripts to ${TARGETDIR_VER}'
 	)
@@ -438,9 +438,9 @@ if(UNIX AND NOT APPLE)
 			add_custom_target(
 				blender_man_page ALL
 				COMMAND ${CMAKE_SOURCE_DIR}/doc/manpage/blender.1.py
-				        ${EXECUTABLE_OUTPUT_PATH}/blender
+				        ${EXECUTABLE_OUTPUT_PATH}/ocvl
 				        ${CMAKE_CURRENT_BINARY_DIR}/blender.1)
-			add_dependencies(blender_man_page blender)
+			add_dependencies(blender_man_page OpenCVLaboratory)
 		endif()
 	endif()
 
@@ -448,19 +448,19 @@ if(UNIX AND NOT APPLE)
 	if(WITH_PYTHON_MODULE)
 		if(WITH_INSTALL_PORTABLE)
 			install(
-				TARGETS blender
+				TARGETS OpenCVLaboratory
 				DESTINATION "."
 			)
 		else()
 			install(
-				TARGETS blender
+				TARGETS OpenCVLaboratory
 				LIBRARY DESTINATION ${PYTHON_SITE_PACKAGES}
 			)
 		endif()
 		# none of the other files are needed currently
 	elseif(WITH_INSTALL_PORTABLE)
 		install(
-			TARGETS blender
+			TARGETS OpenCVLaboratory
 			DESTINATION "."
 		)
 
@@ -487,7 +487,7 @@ if(UNIX AND NOT APPLE)
 	else()
 		# main blender binary
 		install(
-			TARGETS blender
+			TARGETS OpenCVLaboratory
 			DESTINATION bin
 		)
 		if(WITH_DOC_MANPAGE)
@@ -558,7 +558,7 @@ if(UNIX AND NOT APPLE)
 				PATTERN "tkinter" EXCLUDE                   # ./tkinter
 				PATTERN "lib-dynload/_tkinter.*" EXCLUDE    # ./lib-dynload/_tkinter.co
 				PATTERN "idlelib" EXCLUDE                   # ./idlelib
-				PATTERN "test" EXCLUDE                      # ./test
+				#PATTERN "test" EXCLUDE                      # ./test
 				PATTERN "turtledemo" EXCLUDE                # ./turtledemo
 				PATTERN "turtle.py" EXCLUDE                 # ./turtle.py
 			)
@@ -588,7 +588,7 @@ if(UNIX AND NOT APPLE)
 					PATTERN "*.pyo" EXCLUDE                 # * any cache *
 					PATTERN "oldnumeric" EXCLUDE            # ./oldnumeric
 					PATTERN "doc" EXCLUDE                   # ./doc
-					PATTERN "tests" EXCLUDE                 # ./tests
+					#PATTERN "tests" EXCLUDE                 # ./tests
 					PATTERN "f2py" EXCLUDE                  # ./f2py - fortran/python interface code, not for blender.
 					PATTERN "include" EXCLUDE               # include dirs all over, we wont use NumPy/CAPI
 					PATTERN "*.h" EXCLUDE                   # some includes are not in include dirs
@@ -858,20 +858,20 @@ elseif(APPLE)
 			PATTERN "tkinter" EXCLUDE                   # ./tkinter
 			PATTERN "lib-dynload/_tkinter.*" EXCLUDE    # ./lib-dynload/_tkinter.co
 			PATTERN "idlelib" EXCLUDE                   # ./idlelib
-			PATTERN "test" EXCLUDE                      # ./test
+			#PATTERN "test" EXCLUDE                      # ./test
 			PATTERN "turtledemo" EXCLUDE                # ./turtledemo
 			PATTERN "turtle.py" EXCLUDE                 # ./turtle.py
 		)
 	endmacro()
 
-	set(OSX_APP_SOURCEDIR ${CMAKE_SOURCE_DIR}/release/darwin/blender.app)
+	set(OSX_APP_SOURCEDIR ${CMAKE_SOURCE_DIR}/release/darwin/OpenCVLaboratory.app)
 
 	# setup Info.plist
 	execute_process(COMMAND date "+%Y-%m-%d"
 	                OUTPUT_VARIABLE BLENDER_DATE
 	                OUTPUT_STRIP_TRAILING_WHITESPACE)
 
-	set_target_properties(blender PROPERTIES
+	set_target_properties(OpenCVLaboratory PROPERTIES
 		MACOSX_BUNDLE_INFO_PLIST ${OSX_APP_SOURCEDIR}/Contents/Info.plist
 		MACOSX_BUNDLE_SHORT_VERSION_STRING "${BLENDER_VERSION}${BLENDER_VERSION_CHAR}"
 		MACOSX_BUNDLE_LONG_VERSION_STRING "${BLENDER_VERSION}${BLENDER_VERSION_CHAR} ${BLENDER_DATE}")
@@ -883,10 +883,10 @@ elseif(APPLE)
 
 	# Give the bundle actual creation/modification date
 	execute_process(COMMAND SetFile -d ${SETFILE_DATE} -m ${SETFILE_DATE}
-	                ${EXECUTABLE_OUTPUT_PATH}/blender.app)
+	                ${EXECUTABLE_OUTPUT_PATH}/OpenCVLaboratory.app)
 
 	install(
-		TARGETS blender
+		TARGETS OpenCVLaboratory
 		DESTINATION "."
 	)
 
@@ -895,25 +895,25 @@ elseif(APPLE)
 
 	install(
 		FILES ${OSX_APP_SOURCEDIR}/Contents/PkgInfo
-		DESTINATION blender.app/Contents
+		DESTINATION OpenCVLaboratory.app/Contents
 	)
 
 	install_dir(
 		${OSX_APP_SOURCEDIR}/Contents/Resources
-		blender.app/Contents/
+		OpenCVLaboratory.app/Contents/
 	)
 
 	if(WITH_OPENMP AND OPENMP_CUSTOM)
 		install(
 			FILES ${LIBDIR}/openmp/lib/libomp.dylib
-			DESTINATION blender.app/Contents/Resources/lib
+			DESTINATION OpenCVLaboratory.app/Contents/Resources/lib
 		)
 	endif()
 
 	if(WITH_LLVM AND NOT LLVM_STATIC)
 		install(
 			FILES ${LIBDIR}/llvm/lib/libLLVM-3.4.dylib
-			DESTINATION blender.app/Contents/MacOS
+			DESTINATION OpenCVLaboratory.app/Contents/MacOS
 		)
 	endif()
 
@@ -1005,24 +1005,24 @@ install(
 # -----------------------------------------------------------------------------
 # Setup link libs
 
-add_dependencies(blender makesdna)
+add_dependencies(OpenCVLaboratory makesdna)
 
 setup_blender_sorted_libs()
-target_link_libraries(blender ${BLENDER_SORTED_LIBS})
+target_link_libraries(OpenCVLaboratory ${BLENDER_SORTED_LIBS})
 
-setup_liblinks(blender)
+setup_liblinks(OpenCVLaboratory)
 
 # -----------------------------------------------------------------------------
 # Setup launcher
 
 if(WIN32 AND NOT WITH_PYTHON_MODULE)
 	install(
-		TARGETS blender
+		TARGETS OpenCVLaboratory
 		COMPONENT Blender
 		DESTINATION "."
 	)
 	set_target_properties(
-		blender
+		OpenCVLaboratory
 		PROPERTIES
 			VS_USER_PROPS "blender.Cpp.user.props"
 	)
